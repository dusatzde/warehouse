<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:v="http://corejsf.com/validator"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:p="http://primefaces.org/ui"
	xmlns:util="http://icpc.baylor.edu/facelets/util"
	xmlns:h="http://java.sun.com/jsf/html">
	
	<!--
	Page parameters:
	
	TODO
	
	defaultViewLabel
		The label displayed in the view mode when the value is null.
	-->
	
	<head>
		<link rel="stylesheet" href="../../css/style.css" />
	</head>
	
	<body>
		<div class="templateComment">
			<p> 
				This file is part of FormBuilder.
				
				FormBuilder is free software: you can redistribute it and/or modify
				it under the terms of the GNU General Public License as published by
				the Free Software Foundation, either version 3 of the License, or
				(at your option) any later version.
				
				FormBuilder is distributed in the hope that it will be useful,
				but WITHOUT ANY WARRANTY; without even the implied warranty of
				MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
				GNU General Public License for more details.
				
				You should have received a copy of the GNU General Public License
				along with FormBuilder.  If not, see http://www.gnu.org/licenses/
				
				@see http://www.gnu.org/licenses/lgpl.txt
				
				@author Tomas Cerny (tom.cerny@gmail.com)
				@version 1.0 | Date 24.2.2008
				
				This component renders select and layout in SeamForm
				here are 3 types {enum, entity, list} 
				
				<!-- 
					after http://jira.jboss.org/jira/browse/JBSEAM-2346 will work for required
					
					then erase : noSelectionLabel="#{(empty emptySelectLabel and not required) ? '' : (required ? null : emptySelectLabel)}"      
					and use : noSelectionLabel="#{empty emptySelectLabel ? '' : emptySelectLabel}"
				-->
			</p>
		</div>
		<ui:composition template="/WEB-INF/jfb/profile/primeFaces/widgets/viewEditSwitch.xhtml">
			<ui:define name="edit">
						<h:outputText value="" id="#{id}" />
						<ui:fragment  rendered="#{type == 'enum'}">
							<p:selectOneMenu id="#{id}enum" 
								style="#{style}"
								onblur="validateSelect(this,#{empty required ? 'false' : required}, '#{text['client.validator.text']}');"
								onchange="#{empty onchange ? '' : onchange}"
								title="#{empty title ? label : title}"
								required="#{empty required ? false : required}" 
								value="#{value}">
								<c:if test="#{empty hideNoSelect ? true : not hideNoSelect}">
									<f:selectItem 
											 itemLabel="#{empty emptySelectLabel ? 'Select...' : emptySelectLabel}" 
											 itemValue="#{empty emptySelectValue ? null : emptySelectValue}"/> 
								</c:if>
								<f:selectItems value="#{collection}" var="item" 
									itemLabel="#{item.label}"
									noSelectionLabel="#{(empty emptySelectLabel and not hideEmpty) ? ' ' : (hideEmpty ? null : emptySelectLabel)}" 
								hideNoSelectionLabel="#{empty hideEmpty ? false : hideEmpty}" />
	
								<ui:insert name="ajax"/>     
							</p:selectOneMenu>
						</ui:fragment>
						
						<ui:fragment rendered="#{type == 'entity'}">
							<p:selectOneMenu id="#{id}entity" 
								style="#{style}"
								onblur="validateSelect(this,#{empty required ? 'false' : required}, '#{text['client.validator.text']}');"
								title="#{empty title ? label : title}"
								required="#{empty required ? 'false' : required}" 
								value="#{value}">
								
								<c:if test="#{empty hideNoSelect ? true : not hideNoSelect}">
									<f:selectItem 
											 itemLabel="#{empty emptySelectLabel ? 'Select...' : emptySelectLabel}" 
											 itemValue="#{empty emptySelectValue ? null : emptySelectValue}"/> 
								</c:if>
								<f:selectItems value="#{collection}" var="item" 
									itemLabel="#{empty itemCustomLabel ? item : item[itemCustomLabel]}"
									noSelectionValue="null"
									noSelectionLabel="#{(empty emptySelectLabel and not hideEmpty)  ? ' ' : (hideEmpty ? null : emptySelectLabel)}" 
								hideNoSelectionLabel="#{empty hideEmpty ? false : hideEmpty}"/>
								<ui:insert name="convertor">
									<f:converter converterId="generalConverter"/>
								</ui:insert>
								<!-- 
								<s:objectConverter />
								 -->
								<ui:insert name="ajax"/>
							</p:selectOneMenu>           
						</ui:fragment>
						
						
						<ui:fragment rendered="#{type == 'list'}">
							<p:selectOneMenu id="#{id}list" 
								style="#{style}" 
								onblur="validateSelect(this,#{empty required ? 'false' : required}, '#{text['client.validator.text']}');"
								title="#{empty title ? label : title}"
								required="#{empty required ? 'false' : required}" 
								value="#{value}">
								<c:if test="#{empty hideNoSelect ? true : not hideNoSelect}">
									<f:selectItem 
											 itemLabel="#{empty emptySelectLabel ? 'Select...' : emptySelectLabel}" 
											 itemValue="#{empty emptySelectValue ? null : emptySelectValue}"/> 
								</c:if>
								<f:selectItems value="#{collection}" var="item" 
									itemLabel="#{empty itemLabel ? item : itemLabel}"
									itemValue="#{item}"
									noSelectionLabel="#{(empty emptySelectLabel and not hideEmpty) ? ' ' : (hideEmpty ? null : emptySelectLabel)}"
								hideNoSelectionLabel="#{empty hideEmpty ? false : hideEmpty}" />
								<ui:insert name="ajax"/>
								
							</p:selectOneMenu>     
							<ui:insert name="button"/>
							
						</ui:fragment>
			</ui:define>
			<ui:define name="tooltip"> 
				<p:tooltip for="#{id}enum" styleClass="inTip" showEvent="focus" hideEvent="blur" />  
				<p:tooltip for="#{id}entity" styleClass="inTip" showEvent="focus" hideEvent="blur" />  
				<p:tooltip for="#{id}list" styleClass="inTip" showEvent="focus" hideEvent="blur" />  
			</ui:define>
			<ui:define name="messages">
					<ui:fragment  rendered="#{type == 'enum'}">
						<p:message for="#{id}enum" styleClass="error errors"/>
					</ui:fragment>
					<ui:fragment rendered="#{type == 'entity'}">
						<p:message for="#{id}entity" styleClass="error errors"/>
					</ui:fragment>
					<ui:fragment rendered="#{type == 'list'}">
						<p:message for="#{id}list" styleClass="error errors"/>
					</ui:fragment>
			</ui:define>  
			<ui:define name="view">
				 
				<h:outputText rendered="#{empty value}"
						value="#{empty defaultViewLabel ? '' : defaultViewLabel}" id="#{id}ViewEmpty" />
				<ui:fragment rendered="#{not empty value}">
					<h:outputText rendered="#{empty itemCustomLabel}"
							value="#{value.label}"  id="#{id}View" />
					<h:outputText rendered="#{not empty itemCustomLabel}"
							value="#{value[itemCustomLabel]}"  id="#{id}ViewCustom" />
				</ui:fragment>
				
			</ui:define>
		</ui:composition>
	</body>
</html>
